<?xml version="1.0" encoding="UTF-8"?>
<project name="zeninitie" default="all">
    <!-- The description of this file -->
    <description>
        This build file can be used to build the jar of the application, to run its tests or to generate its javadoc.
    </description>

    <!-- properties of the file -->
    <property name="home" location="${ant.file}/.."/>
    <property name="src" location="${home}/src"/>
    <property name="out" location="${home}/out"/>
    <property name="production" location="${out}/production/ZenInitie"/>
    <property name="jar" location="${out}/artifacts"/>
    <property name="libs" location="${home}/libs"/>
    <property name="testSources" location="/test"/>
    <property name="testResults" location="${out}/tests"/>
    <property name="javadoc" location="${home}/ZenInitieDocs/docs"/>

    <!-- librairies used in the project -->
    <path id="librairies">
        <path location="${libs}/darcula.jar"/>
        <path location="${libs}/kryonet-2.21-all.jar"/>
        <path location="${libs}/jlayer-1.0.1-2.jar"/>
        <path location="${libs}/tritonus-share-0.3.7-3.jar"/>
        <path location="${libs}/mp3spi-1.9.5-2.jar"/>
        <path location="${libs}/gson-2.8.6.jar"/>
        <path location="${libs}/hamcrest-core-1.3.jar"/>
        <path location="${libs}/junit-4.12.jar"/>
    </path>

    <!-- clean the output directory -->
    <target name="clean" description="delete output directory">
        <delete dir="${out}"/>
    </target>

    <!-- recreate the output directory -->
    <target name="init" depends="clean" description="recreate output directory">
        <tstamp/>
        <mkdir dir="${production}"/>
    </target>

    <!-- compile the sources to the output directory -->
    <target name="compile" depends="init" description="compile files">
        <javac srcdir="${src}" destdir="${production}" includeantruntime="false">
            <classpath refid="librairies"/>
        </javac>
    </target>

    <!-- build the jar file -->
    <target name="build" depends="compile" description="build the jar">
        <mkdir dir="${jar}"/>
        <jar destfile="${jar}/ZenInitie.jar" basedir="${production}">
            <manifest>
                <attribute name="Main-class" value="Main"/>
            </manifest>
            <zipgroupfileset dir="${libs}"/>
        </jar>
    </target>

    <!-- run JUnit tests -->
    <target name="tests" description="run tests">
        <delete dir="${testResults}"/>
        <mkdir dir="${testResults}"/>

        <junit printsummary="true" haltonfailure="false" fork="true">
            <classpath>
                <path refid="librairies"/>
                <pathelement path="${java.class.path}"/>
                <pathelement location="${production}/Tests"/>
                <pathelement location="${production}"/>
                <pathelement location="${testSources}"/>
                <pathelement location="${src}"/>
            </classpath>

            <formatter type="xml"/>

            <batchtest todir="${testResults}">
                <fileset dir="${src}">
                    <include name="**/*Test*"/>
                </fileset>
            </batchtest>
        </junit>

        <junitreport todir="${testResults}">
            <fileset dir="${testResults}">
                <include name="*.xml"/>
            </fileset>
            <report format="frames" todir="${testResults}"/>
        </junitreport>
    </target>

    <!-- generate the javadoc of the whole project -->
    <target name="javadoc" description="generate javadoc">
        <delete dir="${javadoc}"/>
        <mkdir dir="${javadoc}"/>
        <javadoc sourcepath="${src}" destdir="${javadoc}">
            <classpath refid="librairies"/>
        </javadoc>
    </target>

    <!-- run all ant tasks -->
    <target name="all" depends="build, tests, javadoc" description="all ant tasks in one command (except running)"/>

    <!-- build the jar and run the project -->
    <target name="run" depends="build" description="run the program">
        <java fork="true" jar="${jar}/ZenInitie.jar"/>
    </target>
</project>
